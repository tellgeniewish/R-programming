name <- rownames(df)
name
colnames(name$Examination)
#
b = subset(swiss, Examination<20 & Agriculture<50)   #Examination 20% 미만, Agriculture 50% 미만
b[c('Examination','Agriculture')]   #주 이름, Examination, Agriculture
# 3-2
df <- subset(swiss, swiss$Examination < 20 & swiss$Agriculture < 50)
df[,c('Examination','Agriculture')]
d <- c(100:200)
d[1:20]
d <- seq(100:119)
d <- c(100:200)
sum(d<110)
sum(d[d<110])
x <- c(1:20)
y <- x[seq(3,18,3)]
y
mean(x[-2(2:10)])
x <- c(1:20)
mean(x[-2(2:10)])
mean(-x[2(2:10)])
mean(x[-(2:10)])
mean(x[-c(2:10)])
a <- c(1, 6, 3, 8)
names(a) <- (“one”, “three”, “six”, “eight”)
a <- c(1, 6, 3, 8)
names(a) <- c("one", "three", "six", "eight")
a
a <- sort(a)
names(a) <- c("one", "three", "six", "eight")
a
ages <- c(58, 20, 85)
names <- c(“Tony”, “Ahn”, “Nick”)
x <- list(ages, names)
ages <- c(58, 20, 85)
names <- c("Tony", "Ahn", "Nick")
x <- list(ages, names)
names(x) <- c("numberes", "names")
x
z <- list(x*2, x/2)
z <- list(x*2, x/2)
x <- c(1,6,8,11)
z <- list(x*2, x/2)
z <- list(x*2, x/2)
z
x <- c(1,6,8,11)
z <- list(x*2, x/2)
names(z) <- list('x*2', 'x/2’)
names(z) <- list("x*2", "x/2")
z
gender <- c(rep("male", 5), rep("female", 10))
gender_fac <- factor(gender)
gender
gender <- c(rep("male", 5), rep("female", 10))
gender
printf(gender)
print(gender)
gender <- c(rep("male", 5), rep("female", 10))
print(gender)
gender_fac <- factor(gender)
summary(gender_fac)
soldier[,c('Examination','Agriculture')]
soldier[c('Examination','Agriculture')]
# 3-2
soldier <- subset(swiss, swiss$Examination < 20 & swiss$Agriculture < 50)
soldier[,c('Examination','Agriculture')]
soldier[c('Examination','Agriculture')]
soldier[,c('Agriculture')]
soldier[c('Agriculture')]
soldier[,c('Agriculture')]
soldier[c('Agriculture')]
soldier[,c('Examination','Agriculture')]
1:100
num_arr <- 1:100
num_arr
num_arr <- c(1:100)
num_arr
num_arr <- seq(0,100,2)
num_arr
name = c("genie", "SH")
a <- rep(1,10) # 반복하고 싶은 것, 횟수
?rep
a <- rep(name, times=10)
a
a <- rep(name, each=10)
a
a <- rep(name, 10, length.out=5)
a
seq(from=0, to=100, length.out=5)
seq(from=-1, to=1, length.out=5)
a <- rep(name, each=10, length.out=50)
a
a <- rep(name, each=10, length.out=5)
a
a <- rep(name, each=10)
a
a <- rep(name, each=10, length.out=5)
a
a <- rep(name, each=10, length.out=4)
a
a <- rep(name, each=10, length.out=3)
a
a <- rep(name, each=10, length.out=2)
a
a <- rep(name, each=10, length.out=50)
a
score <- c("genie"=100,"SH"=90,"L"=80)
score
score[0] # 몇 번 째? 0부터 시작된다
score[1]
score[2]
d <- seq(1,9,2)
d
d>=5
d[d>=5] # TRUE만 알려준다
## d[F,F,T,T,T]
d[F,F,T,T,T]
d>5 # TRUE = 1 / FALSE = 0
sum(d>5) # TRUE만 더함
sum(d[d>5]) # TRUE를 만족하는 값을 더함
a <- list(1, "a", T)
a
a[3]
a[[3]]
a[[2]] # a를 출력하려면 이게 정답!
a[[1]]
a
b <- c(90,80,100)
b
names(b) <- c("math", "english", "korean")
b[2]
b["english"]
a
names(a) <- c('j', 'k', 'l')
a
a[[2]]
a$j
a["j"]
a$j
b["english"]
a["j"]
a$j
a <- list(j=1, k='a', l=T)
a
a[j]
a$j
a["j"]
a[1]
a["j"]
a[[2]]
a["j"]
a$j
a[1]
a$j
a["j"]
# 깔끔
a$j
a[1]
a["j"]
# 깔끔
a[[1]]
a$j
a["j"]
a[1]
# 깔끔
a[[1]]
a$j
a[1]
a["j"]
y <- list("datascience", "taewan", 40)
y
names(y) <- c("major", "name", "age")
y
y$age
y[[3]]
z <- list("major"="datascience", "name"="taewan", "age"=40)
z
y <- list("datascience", "taewan", 40)
y
names(y) <- c("major", "name", "age")
y
y$age
y[[3]]
z <- list("major"="datascience", "name"="taewan", "age"=40)
z
z$age
x <- c("A", "B", "A", "AB", "O", "O")
y <- factor(x)
y
y[4]
y[7] <- "B"
y
y[8] <- "C" # factor를 만들었기 때문에 오류가 남
y # 결측값이 생김
summary(y) # 시험!!!!!
levels(y)
rm(list=ls())
d <- c(100:200)
d[50]
d[100:200:10]
d[100:200:10]
d
d
d
d[1:20]
length(d)
avg(d)
average(D)
average(d)
sum(d[:110])
average(D)
length(d)
avg(d)
average(D)
average(d)
mean(d)
sum(d[:110])
d<110
sum(d[d<110])
d[d<110]
sum(d<110)
x <- matrix(1:20, nrow=4, ncol=5)
x
x <- matrix(1:20, nrow=4)
x
x
View(x)
x[4,5]
x[20]
x[3]
1:10
c(1:10)
x[7]
v <- 1:12
matrix(data=v, ncol=4)
mat <- matrix(data=v, ncol=4)
str(mat)
dim(mat)
nrow(mat) = dim(mat)[1] # 행의 개수
nrow(mat) == dim(mat)[1] # 행의 개수
ncol(mat) == dim(mat)[2] # 열의 개수
length(mat) # 셀의 개수
x <- matrix(1:20, nrow=4)
x
x[4,5]
x[20]
x[20]
x[3]
x[7]
y <- matrix(1:20, nrow=3, )
y <- matrix(1:20, nrow=3 )
x <- matrix(data=1:20,4,5)
z <- matrix(1:18, 3)
z
z <- matrix(1:18, ncol=3, byrow=T)
z
x <- 1:3
y <- 4:6
z <- cbind(x,y)
z
a <- rbind(x,y)
a
cbind(1:3, 4:6, matrix(7:12,3,2))
rbind(matrix(1:6,2,3), matrix(7:12,2,3))
x <- matrix(1:20, 4, byrow=T)
x
x[3,4]
x[3]
x[3,]
x[,5]
x
x[,]
x[2,]
x[2,1:3]
a <- c(1,3)
a
x <- 1:3
y <- 4:6
m2 <- rbind(x, y)
m3 <- cbind(m1, x)
m4 <- rbind(m2, m3)
m4
x <- 1:3
y <- 4:6
m2 <- rbind(x, y)
m3 <- cbind(m1, x)
x <- 1:3
y <- 4:6
m2 <- rbind(x, y)
m3 <- cbind(m1, x)
m1 <- cbind(x, y)
m2 <- rbind(x, y)
m3 <- cbind(m1, x)
m4 <- rbind(m2, m3)
m4
m4 <- cbind(m2, m3)
m4
m4 <- cbind(m2, m3)
m4 <- rbind(m2, m3)
m4
x <- 1:3
y <- 4:6
m1 <- cbind(x, y)
m2 <- rbind(x, y)
m5 <- cbind(m1, m2)
m5 <- cbind(m1, m1)
m6 <- rbind(m1, m1)
m5
m6
m1 <- cbind(x, y)
m1
#####
mat <- matrix(c(1,3,5,7,9,2,4,6,8,10,2,3,5,7,11), ncol=3)
mat
mat2 <- as.data.frame(mat)
mat2
# 3-2번
soldier <- subset(swiss, swiss$Examination < 20 & swiss$Agriculture < 50)
soldier[,c('Examination','Agriculture')]
jingzip <- swiss[swiss$Examination<20&swiss$Agriculture<50,c("Examination","Agriculure")]
jingzip
# 3-1번
#View(swiss)
df <- subset(swiss, 80 <= swiss$Catholic & swiss$Agriculture)
df
jingzip <- swiss[swiss$Examination<20&swiss$Agriculture<50,c("Examination","Agriculure")]
jingzip
#####
str(iris)
class(iris)
d <- matrix(seq(5,60,5), nrow = 3, ncol = 4)
d_t <- matrix(seq(5,60,5), nrow = 3, ncol = 4, byrow = T)
d_t
d_t <- t(d)
d_T
d_t
d
b1 <- c(4,5,7,2)
b2 <- c(19,15,12,17)
b3 <- c(20,24,28,23)
m1 <- c(b1, b2, b3)
m1
m1 <- matrix(c(b1,b2,b3), 4, 3)
m1
rich_state.x77 <- subset(state.x77, 5000<Income)
state.x77
rich_state.x77 <- subset(state.x77, 5000<=Income)
subset(state.x77, Income >= 5000)
rich_state.x77 <- subset(state.x77, 5000<=Income)
View(state.x77)
rich_state.x77 <- subset(state.x77, 5000<='Income')
rich_state.x77 <- subset(state.x77, 5000<='Income')
rich_state.x77 <- subset(state.x77, 5000<='Income')
rich_state.x77
rich_state.x77 <- subset(state.x77, Income >= 5000)
rich_state.x77
rich_state.x77 <- subset(state.x77, Income >= 5000)
rich_state.x77
rich_state.x77 <- subset(state.x77, "Income" >= 5000)
rich_state.x77
st <- data.frame(state.x77)
st <- data.frame(state.x77)
rich_state.x77 <- subset(st, "Income" >= 5000)
rich_state.x77
st <- data.frame(state.x77)
rich_state.x77 <- subset(st, "Income" >= 5000)
rich_state.x77
state.x77   #r제공 데이터셋
rich_s = subset(data.frame(state.x77[ , c('Population','Income','Illiteracy','Life Exp')]), Income>=5000)
rich_s
df <- data.frame(x,y,z)
df
df <- data.frame(x,y,z)
df
x <- c(1:3)
xy <- c("white", "blue", "yellow")
x
y <- c("white", "blue", "yellow")
z <- c(TRUE, FALSE, TRUE)
df <- data.frame(x,y,z)
df
nrow(120<=Ozone)
nrow(120<=airquality$Ozone)
nrow(subset(airquality, Ozone > 120))
nrow(120<=airquality$Ozone)
nrow(120<airquality$Ozone)
subset(airquality, max(airquality[ , "Temp"]))
subset(airquality, Temp == max(airquality[ , "Temp"]))
# 3-1번
#View(swiss)
df <- subset(swiss, 80 <= Catholic & Agriculture)
df
# 3-2번
soldier <- subset(swiss, Examination < 20 & Agriculture < 50)
soldier[,c('Examination','Agriculture')]
subset(airquality, Temp == max(airquality[ , "Temp"]))
v1 <- c("Seoul", "Tokyo", "Washington")
v2 <- c(1, 3, 2)
v3 <- c("KOR", "JPN", "USA")
city.info <- data.frame(v2, v1, v3) #!!!!!!!!!!!
View(city.info)
iris[17,"Petal.Width"]
iris[17,4]
a <- iris[,c(1:2)]
a
dim(a)[2]
nrow(a)
dim(a)[1]
unique(iris[,5])
table(iris[,5])
a[a[,2]>5]
a
a[a[,2]>3]
a
a[a[,2]>3]
a[,2]>3
a[a[,2]>3]
b <- subset(a, a[,2]>5) # 데이터, 조건
b
b <- tail(iris)
b <- subset(a, a[,2]>5) # 데이터, 조건
b
a <- rbind(a,c(0,5,6))
colnames(a) <- c('x','y','z')
b <- subset(a, a[,2]>5) # 데이터, 조건
a <- matrix(c(7,5,11,6,3,9),2)
colSums(a)
rowSums(a)
colSums(iris) # 문자열이 있어서 안 됨
colSums(iris[,-5])
rowSums(iris[,-5])
a <- rbind(a,c(0,5,6))
colnames(a) <- c('x','y','z')
b <- subset(a, a[,2]>5) # 데이터, 조건
b
a
a
a[,2]>3
a[a[,2]>3]
a[a[,5]>3]
a[a[,2]>5]
a[a[,2]>5,]
b
a
b <- subset(a, y>5) # error
b
a
b <- subset(a, y>5) # error
b
b <- subset(a, a[,2]>5) # 데이터, 조건
b
b <- subset(a, y>5) # error
b
b <- tail(iris)
a <- rbind(a,c(0,5,6))
colnames(a) <- c('x','y','z')
b <- subset(a, a[,2]>5) # 데이터, 조건
b <- subset(a, y>5) # error
b
a <- matrix(c(7,5,11,6,3,9),2)
a <- rbind(a,c(0,5,6))
colnames(a) <- c('x','y','z')
a
b <- subset(a, a[,2]>5) # 데이터, 조건
b
b <- subset(a, y>5) # error
b
a
b
a
b <- subset(a, y>5) # error
b
b <- subset(a, a[, "y"] > 5) # error
b
d <- matrix(seq(5,60,5),3)
d
d <- matrix(seq(5,60,5),3, byrow=T)
d
setwd(, "C:\Users\user\Desktop\J\DDWU\23-2\R프로그래밍")
setwd(, "C:/Users/user/Desktop/J/DDWU/23-2/R프로그래밍") # \가 아니라 /로 고쳐야 함
setwd("C:/Users/user/Desktop/J/DDWU/23-2/R프로그래밍") # \가 아니라 /로 고쳐야 함
getwd()
print(a+b, b-a, "언스전공생")
a <- 1
b <- 3
print(a+b, b-a, "언스전공생")
a <- 1
b <- 3
print(a+b, b-a, "언스전공생")
cat(a+b, b-a, "언스전공생")
# 2-2번
num <- factor(People$gender)
#num
genderSummary <- summary(num)
genderSummary
name <- c("Olivia", "Sophia", "John", "Luna")
age <- c(18, 23, 22, 30)
gender <- c('F', 'F' ,'M' ,'F')
height <- c(162, 158, 160, 177)
student <- c(TRUE, FALSE, TRUE, FALSE)
People <- data.frame(name, age, gender, height, student)
#People
avg_age <- mean(People$age)
avg_height <- mean(People$height)
avg_age
avg_height
# 2-2번
num <- factor(People$gender)
#num
genderSummary <- summary(num)
genderSummary
